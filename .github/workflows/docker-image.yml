name: Docker Image CI

permissions: read-all

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-docker:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Lint the Docker image
      uses: hadolint/hadolint-action@v3.1.0

  lint-code:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install pylint
      run: pip install pylint

    - name: Run pylint
      run: pylint **/*.py

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4  

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install pytest
      run: pip install pytest

    - name: Run pytest
      run: pytest

  version-check:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Build and Run Docker Container
      run: |
        docker build -t my-image-name:latest .
        docker run -d --name my-container -p 5000:5000 my-image-name:latest

    - name: Wait for the app to be ready
      run: |
        sleep 10 # Wait for the server to start

    - name: Check version endpoint
      run: |
        response=$(curl -s http://localhost:5000/version)
        echo "Response from /version: $response"
        if [ "$response" != "v0.0.1" ]; then
          echo "Version check failed! Expected 'v0.0.1' but got '$response'"
          exit 1
        fi

    - name: Stop and Remove Docker Container
      run: |
        docker stop my-container
        docker rm my-container
